version: '3.8'

services:
  ai-trading-pipeline:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENV=production
      - LOG_LEVEL=info
      - PORT=8000
      # Strategy Graduation System API Keys
      - BYBIT_TESTNET=${BYBIT_TESTNET:-true}
      - BYBIT_TESTNET_API_KEY=${BYBIT_TESTNET_API_KEY}
      - BYBIT_TESTNET_API_SECRET=${BYBIT_TESTNET_API_SECRET}
      - BYBIT_LIVE_API_KEY=${BYBIT_LIVE_API_KEY}
      - BYBIT_LIVE_API_SECRET=${BYBIT_LIVE_API_SECRET}
      # Generic fallback
      - BYBIT_API_KEY=${BYBIT_API_KEY}
      - BYBIT_API_SECRET=${BYBIT_API_SECRET}
      # Database and Redis
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # Security Keys
      - API_SECRET_KEY=${API_SECRET_KEY}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
      - SERVICE_API_KEY=${SERVICE_API_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - PASSWORD_SALT=${PASSWORD_SALT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      # Admin Credentials
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GRAFANA_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - DASHBOARD_API_KEY=${DASHBOARD_API_KEY}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
