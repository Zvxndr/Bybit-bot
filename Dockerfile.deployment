# ðŸ”¥ Open Alpha - DigitalOcean Deployment Configuration
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies for crypto trading
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libffi-dev \
    libssl-dev \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better Docker caching
COPY requirements.txt .
COPY requirements_current.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir -r requirements_current.txt

# Install additional dependencies for wealth management system
RUN pip install --no-cache-dir \
    aiohttp>=3.8.0 \
    pyyaml>=6.0 \
    pandas>=2.0.0 \
    numpy>=1.24.0 \
    sqlite3 \
    asyncio \
    httpx>=0.24.0 \
    uvicorn>=0.23.0 \
    fastapi>=0.100.0 \
    jinja2>=3.1.0

# Create necessary directories
RUN mkdir -p /app/src/data/speed_demon_cache
RUN mkdir -p /app/logs
RUN mkdir -p /app/config

# Copy application code
COPY . .

# Cache-busting layer to ensure fresh template deployment
ARG CACHE_BUST
RUN echo "Template cache bust: ${CACHE_BUST:-$(date)}" > /tmp/template_cache_bust.txt

# Set environment variables for deployment
ENV PYTHONPATH=/app
ENV DEBUG_MODE=true
ENV DEPLOYMENT_ENV=digitalocean
ENV DATA_DOWNLOAD_ON_START=true

# Create non-root user for security
RUN useradd -m -u 1000 openalpha && chown -R openalpha:openalpha /app
USER openalpha

# Expose port for fire dashboard
EXPOSE 5050

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5050/health || exit 1

# Startup script that handles data download and application launch
CMD ["python", "deployment_startup.py"]